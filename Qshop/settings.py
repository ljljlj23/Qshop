"""
Django settings for Qshop project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3f#^_&ca8x^!3o8139xvv78g7!f*2h@e1bed*6ed^xxfqh79j6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Buyer',
    'Saller',
    'djcelery',
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'Qshop.middleware.MiddleWareTest',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'Qshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Qshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    # 'slave': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'slave.sqlite3'),
    # },
    # 'slave2': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'slave2.sqlite3'),
    # }
}

# logging日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,    # 是否禁用之前的日志
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,'debug.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)
# 这条配置跟STATICFILES_DIRS，MEDIA_URL，MEDIA_ROOT冲突
# 在做静态文件收集的时候，如果收集完成之后，需要注释掉
# STATIC_ROOT = os.path.join(BASE_DIR,'static')

MEDIA_URL = '/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'static')

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION':[
            '127.0.0.1:11211'    # 本地memcache的地址  端口
        ]
    }
}
CACHE_MIDDLEWARE_KEY_PREFIX = ''
CACHE_MIDDLEWARE_SECONDS = 600
CACHE_MIDDLEWARE_ALIAS = 'default'

# DATABASE_ROUTERS = ['mydbrouter.Router']

# 公钥
alipay_public_key_string = '''-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoKgRki1TWBrFIEbZ486mrwE6qj0yQa2I5ybPIp618JHXq1XpRSUyoFjW7xEGgvEI2zSA6+qk927Cp2KZddRHMAGOowmjNswhdT1nIcK9MCtX0GRE5E4JOLUzD0Ir0SBihQyrdMxZxmwhDs4o2HJdyC5CkSYeGuMH4CxmcM7CBU5mgwHLXmvjWldT/QTsvos0eGELZRq7o/GYAo/S7N3Qb4z4FPwdTEzyqMYFH+2s+Hkpg3QApPGzti8lD/MfjaykU09wXzAIuYcQ8/VvAzPGRC6FTbFqaEd2R+UfRZ8mxBPlwSl5awpg0uGzTp28INAUnYlA1OvabazqDkG3KOo4GQIDAQAB
-----END PUBLIC KEY-----'''
# 私钥
alipay_private_key_string = '''-----BEGIN PRIVATE KEY-----
MIIEogIBAAKCAQEAoKgRki1TWBrFIEbZ486mrwE6qj0yQa2I5ybPIp618JHXq1XpRSUyoFjW7xEGgvEI2zSA6+qk927Cp2KZddRHMAGOowmjNswhdT1nIcK9MCtX0GRE5E4JOLUzD0Ir0SBihQyrdMxZxmwhDs4o2HJdyC5CkSYeGuMH4CxmcM7CBU5mgwHLXmvjWldT/QTsvos0eGELZRq7o/GYAo/S7N3Qb4z4FPwdTEzyqMYFH+2s+Hkpg3QApPGzti8lD/MfjaykU09wXzAIuYcQ8/VvAzPGRC6FTbFqaEd2R+UfRZ8mxBPlwSl5awpg0uGzTp28INAUnYlA1OvabazqDkG3KOo4GQIDAQABAoIBABXkENDcQDkHHMkzHkl+RRQflMDRqeFtJfRpQ1wySBRJqxt7j1eOpAFZWaAlr79z3IMR+mcrB+N3QirQspxtmm2eKLNqgsTat8xj24OsJ19C6KpKn2CEiZkih5ySpanPQd1jRpGZrrnszexYhxRHMSQvuX5RtVRwjwgqxKKmaaWTO/ToS5KuRLR1TuYVK/phnkEtj+5lKMXSYhIPj9PQr1puEDWJDIrFFjgeyZqjwH+gHywve8GqiM+xYOgY7A9ACmTLFESEP0WmbZF1e8KzP+7JQZdEI/T19kxaBVXbcwLZ7+RO0eWzzRa877ZWo2TNIn+ZHzJL4FLhuMwCRUn+m6ECgYEA0WWW3Sk3nvC7EF2PC6KsAKK6ZeqGKRahbwxuL7zLvzi7wHNkhwNgWKsmaotrkOAO924AekLb4Hi1/xpf/6oTFOAEGXV8lQqORhYd+7zWXTsBdIlBhzbQmWJ86W3KeE9wfi5hsBbaOn7t9hnBmPA0Q4JdoOthOZAEUubBSXbB130CgYEAxGl+aRsQZKvU7ey+7BKYYDBcIvxpmF89eNDuf3xtBiyDgqL9S/vvJzqn+4y6qqXI49AdWjPOxgvuNXRnfP7yGHTqLxOnwvsBpPizlMDNmK4YIKJUnk1yLsLh4kCdyYJQa3cROfoQ/oWpIjGjnO2DAstfB/3dWEIbnQKa0pj9nc0CgYBm5eId6hxACZITN7aMhDK72Tt5y6aD2HAaDuSyprcEz89Lgij7Q8h7qhclsj94oPIZ2r93VRWRmB/vLTnRe/UGhBLfo+FFqDtD66huRVyd0dokNzKxTFlzlndFikM9nePszcQJcSFqL2emUP/WtOsp5Y02/5P2YnQNfQGspSQaTQKBgBl9/7QwmQ4X50kCIz2MpE5HuI2p6SKnqdjWdT4CrjvQ5zi7YtjL2BxlVowllcy0O8ClsEmW082MmtxBQXVNuapG8mYtzOZXob0Bsn0qEQUyA1uo9gad0qYTETJGZLRUv49TIt89f5spSexwOOYTRZ/FOY5V+raLzf2w6ttOlAw5AoGAKM3/EwyI6oK74v36Hhdxk+dWeMLVrhCKISj9XRKGXR7FfOQHpgBdOvr6r5AD0qtxDr1+GxRuom9VWH2Bkv1NXrP40e9cbRMg9c/eCiasEc7mWsExdVDboaRgla0npcGFRyk3EcFq+gltl8H6JLrI9xR2gBgnTPhQkhbp3Lt2JFk=
-----END PRIVATE KEY-----'''

# 导入djcelery包
import djcelery
# 进行模块载入
djcelery.setup_loader()
# 中间人，指定redis，第二个数据库
BROKER_URL = 'redis://127.0.0.1:6379/1'
# 具体的任务文件
CELERY_IMPORTS = ('CeleryTask.tasks')
# celery时区，跟django保持一致
CELERY_TIMEZONE = 'UTC'
# django-celery的处理器，是固定的
CELERYBEAT_SCHEDULER='djcelery.schedulers.DatabaseScheduler'

# 定时任务
from celery.schedules import timedelta
CELERYBEAT_SCHEDULE = {
    u'测试任务':{
        'task':'CeleryTask.tasks.test',    # 执行的任务函数
        'schedule':timedelta(seconds=1)    # 执行时间，隔一秒执行一次
    }
}